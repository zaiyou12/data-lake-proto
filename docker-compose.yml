version: '3.9'
services:
  frontend:
    container_name: data-lake-front
    build:
      context: ./front-end
      dockerfile: front.Dockerfile
    ports:
      - "8080:8080"

  backend:
    container_name: data-lake-back
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3
    build:
      context: ./back-end
      dockerfile: back.Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ${SQLITE_ABS_DIR}:/www/sqlite.db
      - ./back-end/app/static/ecg_png_cache:/www/app/static/ecg_png_cache
      - ${ECG_AU_DIR}:${ECG_AU_DIR}

  nginx:
    container_name: data-lake-nginx
    image: nginx:1.21
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/log:/var/log/nginx
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    container_name: data-lake-certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  # adminer:
  #   image: adminer:latest
  #   restart: always
  #   ports:
  #     - "8000:8080"
  #   volumes:
  #     - ./db/design:/var/www/html/designs/hydra
  #   environment:
  #     ADMINER_DEFAULT_SERVER: SQLite
  #     ADMINER_DESIGN: hydra
